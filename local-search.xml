<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>CMS</title>
    <link href="/2023/02/bd0fba360871.html"/>
    <url>/2023/02/bd0fba360871.html</url>
    
    <content type="html"><![CDATA[<p>登录界面</p><p><img src="http://rrk0fj71q.hn-bkt.clouddn.com/image-20230328140556794.png" alt="效果示意图"></p><p>主界面</p><p><img src="http://rrk0fj71q.hn-bkt.clouddn.com/image-20230328140942577.png" alt="效果示意图"></p><p>用户管理</p><p><img src="http://rrk0fj71q.hn-bkt.clouddn.com/image-20230328141017026.png" alt="效果示意图"></p><p>权限管理</p><p><img src="http://rrk0fj71q.hn-bkt.clouddn.com/image-20230328141053388.png" alt="效果示意图"></p><p>细节：</p><p><img src="http://rrk0fj71q.hn-bkt.clouddn.com/image-20230328141252763.png" alt="效果示意图"></p>]]></content>
    
    
    <categories>
      
      <category>Projects</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>双流三维 GIS 可视化内涝分析系统</title>
    <link href="/2023/02/c5c4635c533a.html"/>
    <url>/2023/02/c5c4635c533a.html</url>
    
    <content type="html"><![CDATA[<p>登录页面</p><p><img src="http://rrk0fj71q.hn-bkt.clouddn.com/image-20230328135421386.png" alt="效果示意图"></p><p>主界面</p><p><img src="http://rrk0fj71q.hn-bkt.clouddn.com/image-20230328135509546.png" alt="效果示意图"></p><p><img src="http://rrk0fj71q.hn-bkt.clouddn.com/image-20230328140304127.png" alt="效果示意图"></p><p>管理界面</p><p><img src="http://rrk0fj71q.hn-bkt.clouddn.com/image-20230328140108414.png" alt="效果示意图"></p><p>细节</p><p><img src="http://rrk0fj71q.hn-bkt.clouddn.com/image-20230328135554916.png" alt="效果示意图"></p><p><img src="http://rrk0fj71q.hn-bkt.clouddn.com/image-20230328135720305.png" alt="效果示意图"></p><p><img src="http://rrk0fj71q.hn-bkt.clouddn.com/image-20230328135751789.png" alt="效果示意图"></p><p><img src="http://rrk0fj71q.hn-bkt.clouddn.com/image-20230328135809190.png" alt="效果示意图"></p><p><img src="http://rrk0fj71q.hn-bkt.clouddn.com/image-20230328135943834.png" alt="效果示意图"></p><h1 id="ScrollMessage-组件的实现"><a href="#ScrollMessage-组件的实现" class="headerlink" title="ScrollMessage 组件的实现"></a>ScrollMessage 组件的实现</h1><ul><li>从服务器获取 warnTextList</li><li>东西要往左滚动才合理哈</li><li>当滚动scrollLeft大于列表内容width时恢复为0</li><li>也可以建立 websocket 接收服务端数据时触发ws.onmessage，将服务器的数据加入 warnTextList实现动态加入<img src="http://rrk0fj71q.hn-bkt.clouddn.com/image-20230330154526198.png" alt="组件细节"></li><li>记得用生命周期函数beforeDestroy  clearInterval 不要造成浪费</li></ul><p><img src="http://rrk0fj71q.hn-bkt.clouddn.com/image-20230330180725468.png" alt="组件细节"></p><h1 id="Loading-组件的实现"><a href="#Loading-组件的实现" class="headerlink" title="Loading 组件的实现"></a>Loading 组件的实现</h1><ul><li><p>效果如下</p><p><img src="http://rrk0fj71q.hn-bkt.clouddn.com/image-20230330155830762.png" alt="组件细节"></p></li><li><p>包括三个部分：一个圆形边框、两个内部的旋转边框和一个中间的文本。</p></li><li><p>边框 + boarder-radius 50% 成圆，boarder-top 只留上面一条</p></li><li><p>一个条条用 ::before 和 ::after 伪类等到相同的条条，再加上 transform：rotate（120,240）可以得到一个圈</p></li><li><p>animation 关键帧 ：文字和外面的 div 方向旋转</p></li></ul><h1 id="toolsPanel组件的实现"><a href="#toolsPanel组件的实现" class="headerlink" title="toolsPanel组件的实现"></a>toolsPanel组件的实现</h1><p><img src="http://rrk0fj71q.hn-bkt.clouddn.com/image-20230330180822767.png" alt="组件细节"></p><ul><li>加点小样式：iconfont选中样式（封装函数，确保 radio 选择的唯一性）</li><li>点击触发图层面板点击事件，控制显示与隐藏，开关逻辑！<ul><li>关闭打开的</li><li>关闭打开的+打开新的</li></ul></li></ul><h1 id="layerPanel-组件的实现"><a href="#layerPanel-组件的实现" class="headerlink" title="layerPanel 组件的实现"></a>layerPanel 组件的实现</h1><p><img src="http://rrk0fj71q.hn-bkt.clouddn.com/image-20230330183452583.png" alt="组件细节"></p><p><img src="http://rrk0fj71q.hn-bkt.clouddn.com/image-20230330184430410.png" alt="组件细节"></p><p><img src="http://rrk0fj71q.hn-bkt.clouddn.com/image-20230330184452388.png" alt="组件细节"></p><ul><li><p>划分片区：title、radio、checkbox、switch 具名插槽的使用</p><ul><li><p>title</p></li><li><p>Radio : cesium 查找数据集 getLegendData 不同类型等级阈值获取 viewerFlyTo</p></li><li><p>checkbox：通过实体数据集的name属性查找数据集</p></li><li><p>switch</p></li><li><p><strong>自定义指令 v-drag</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">directive</span>(<span class="hljs-string">&#x27;drag&#x27;</span>, &#123;<br>  <span class="hljs-attr">inserted</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">el,data</span>) &#123;<br>    el.<span class="hljs-property">style</span>.<span class="hljs-property">position</span> = <span class="hljs-string">&#x27;absolute&#x27;</span>;<br>    el.<span class="hljs-property">style</span>.<span class="hljs-property">cursor</span> = <span class="hljs-string">&#x27;move&#x27;</span>;<br>    el.<span class="hljs-property">onmousedown</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">event</span>)&#123;<br>      <span class="hljs-keyword">let</span> startX = event.<span class="hljs-property">clientX</span>;<br>      <span class="hljs-keyword">let</span> startY = event.<span class="hljs-property">clientY</span>;<br>      <span class="hljs-keyword">let</span> left = el.<span class="hljs-property">offsetLeft</span>;<br>      <span class="hljs-keyword">let</span> top = el.<span class="hljs-property">offsetTop</span>;<br>      <span class="hljs-variable language_">document</span>.<span class="hljs-property">onmousemove</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">event</span>)&#123;<br>        <span class="hljs-keyword">let</span> X = event.<span class="hljs-property">clientX</span> - startX<br>        <span class="hljs-keyword">let</span> Y = event.<span class="hljs-property">clientY</span> - startY;<br>        el.<span class="hljs-property">style</span>.<span class="hljs-property">left</span> = <span class="hljs-string">`<span class="hljs-subst">$&#123;X + left&#125;</span>px`</span>;<br>        el.<span class="hljs-property">style</span>.<span class="hljs-property">top</span> = <span class="hljs-string">`<span class="hljs-subst">$&#123;Y + top&#125;</span>px`</span>;<br>      &#125;<br>      <span class="hljs-variable language_">document</span>.<span class="hljs-property">onmouseup</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>        <span class="hljs-variable language_">document</span>.<span class="hljs-property">onmousemove</span> = <span class="hljs-variable language_">document</span>.<span class="hljs-property">onmouseup</span> = <span class="hljs-literal">null</span>;<br>      &#125;;<br>    &#125;<br>  &#125;<br>&#125;)<br><br></code></pre></td></tr></table></figure></li></ul></li></ul><h1 id="legendBox-组件的实现"><a href="#legendBox-组件的实现" class="headerlink" title="legendBox 组件的实现"></a>legendBox 组件的实现</h1><p><img src="http://rrk0fj71q.hn-bkt.clouddn.com/image-20230330194719011.png" alt="组件细节"></p><ul><li><p>颜色动态切换 <code>ref=&quot;colorBlock&quot;</code> 拿到后增加样式</p><p>item.attributes.style.value &#x3D; <code>background: $&#123;data[index].color&#125;;</code></p></li><li><p>动态监听图例是否发生变化，如果图例名发生变化则调用nextTick修改图列块颜色</p></li></ul><h1 id="measureBar-组件的实现"><a href="#measureBar-组件的实现" class="headerlink" title="measureBar 组件的实现"></a>measureBar 组件的实现</h1><p><img src="http://rrk0fj71q.hn-bkt.clouddn.com/image-20230330200323936.png" alt="组件细节"></p><ul><li>Cesium 创建测量对象</li><li>drawLineMeasureGraphics（RIGHT_CLICK就停止）</li><li>drawAreaMeasureGraphics</li><li>drawTrianglesMeasureGraphics</li><li>cancelDraw</li></ul><h1 id="popUpInfo-组件的实现"><a href="#popUpInfo-组件的实现" class="headerlink" title="popUpInfo 组件的实现(?)"></a>popUpInfo 组件的实现(?)</h1><ul><li>add</li><li>Destroy</li></ul><h1 id="leftPanel-组件的实现"><a href="#leftPanel-组件的实现" class="headerlink" title="leftPanel 组件的实现"></a>leftPanel 组件的实现</h1><p><img src="http://rrk0fj71q.hn-bkt.clouddn.com/image-20230330203609632.png" alt="组件细节"></p><ul><li>缩放按钮 shrink 使用<code>:class</code>来控制左右按钮样式</li><li>slot 套娃 container-panel 套娃 chart-panel</li><li>对 table 进行抽离，增加操作栏（下载、编辑、删除）</li><li>el-table  elPagenation</li></ul><h1 id="lt-Transition-gt-组件"><a href="#lt-Transition-gt-组件" class="headerlink" title="&lt;Transition&gt; 组件"></a><code>&lt;Transition&gt;</code> 组件</h1><p><code>Transition&gt;</code> 是一个内置组件，这意味着它在任意别的组件中都可以被使用，无需注册。它可以将进入和离开动画应用到通过默认插槽传递给它的元素或组件上。进入或离开可以由以下的条件之一触发：</p><ul><li>由 <code>v-if</code> 所触发的切换</li><li>由 <code>v-show</code> 所触发的切换</li><li>由特殊元素 <code>&lt;component&gt;</code> 切换的动态组件</li><li>改变特殊的 <code>key</code> 属性</li></ul>]]></content>
    
    
    <categories>
      
      <category>Projects</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
